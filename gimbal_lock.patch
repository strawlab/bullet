Index: src/LinearMath/btMatrix3x3.h
===================================================================
--- src/LinearMath/btMatrix3x3.h	(revision 2038)
+++ src/LinearMath/btMatrix3x3.h	(working copy)
@@ -309,26 +309,27 @@
 		//get the pointer to the raw data
 
 		// Check that pitch is not at a singularity
+  		// Check that pitch is not at a singularity
 		if (btFabs(m_el[2].x()) >= 1)
 		{
 			euler_out.yaw = 0;
 			euler_out2.yaw = 0;
-
+	
 			// From difference of angles formula
-			btScalar delta = btAtan2(m_el[0].x(),m_el[0].z());
-			if (m_el[2].x() > 0)  //gimbal locked up
+			btScalar delta = btAtan2(m_el[2].y(),m_el[2].z());
+			if (m_el[2].x() < 0)  //gimbal locked down
 			{
 				euler_out.pitch = SIMD_PI / btScalar(2.0);
 				euler_out2.pitch = SIMD_PI / btScalar(2.0);
-				euler_out.roll = euler_out.pitch + delta;
-				euler_out2.roll = euler_out.pitch + delta;
+				euler_out.roll = delta;
+				euler_out2.roll = delta;
 			}
-			else // gimbal locked down
+			else // gimbal locked up
 			{
 				euler_out.pitch = -SIMD_PI / btScalar(2.0);
 				euler_out2.pitch = -SIMD_PI / btScalar(2.0);
-				euler_out.roll = -euler_out.pitch + delta;
-				euler_out2.roll = -euler_out.pitch + delta;
+				euler_out.roll = delta;
+				euler_out2.roll = delta;
 			}
 		}
 		else
